name: Build

on:
    push:
        branches: [master]
    pull_request: ~
    release:
        types: [created]
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash
        name: Test
        strategy:
            fail-fast: false
            matrix:
                php: [7.2, 7.3, 7.4, 8.0, 8.1, 8.2, 8.3, 8.4]
                os: [ubuntu-latest]
                composer-mode: [update]
                symfony-version: ['']
                include:
                    # Get the latest stable PHP to publish the phar
                    -   php: 8.3
                        os: ubuntu-latest
                        composer-mode: update
                        publish-phar: true
                        symfony-version: ''

                    # 7.2 build with lowest dependencies
                    -   php: 7.2
                        os: ubuntu-latest
                        composer-mode: lowest
                        symfony-version: ''

                    # MacOS on latest PHP only
                    -   php: 8.2
                        os: macos-latest
                        composer-mode: update
                        symfony-version: ''

                    # Windows on latest PHP only
                    -   php: 8.2
                        os: windows-latest
                        composer-mode: update
                        symfony-version: ''

                    # Symfony jobs:
                    -   php: 8.1
                        os: ubuntu-latest
                        composer-mode: update
                        symfony-version: '4.4'
                    -   php: 8.2
                        os: ubuntu-latest
                        composer-mode: update
                        symfony-version: '5.4'
                    -   php: 8.2
                        os: ubuntu-latest
                        composer-mode: update
                        symfony-version: '6.0'
                    -   php: 8.2
                        os: ubuntu-latest
                        composer-mode: update
                        symfony-version: '7.0'

        steps:
            -   uses: actions/checkout@v4

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-file: "development"
                    ini-values: "phar.readonly=0,zend.exception_ignore_args=Off"
                    coverage: none

            -   name: Install symfony/flex
                if: matrix.symfony-version != ''
                run: |
                    composer config --global --no-plugins allow-plugins.symfony/flex true &&
                    composer global require symfony/flex

            # until psalm is updated to v5 which is compatible with Symfony 7
            -   name: Remove vimeo/psalm
                if: matrix.symfony-version == '7.0'
                run: composer remove vimeo/psalm --no-update --dev

            -   name: Install latest dependencies
                if: matrix.composer-mode == 'update'
                env:
                    SYMFONY_REQUIRE: ${{ matrix.symfony-version }}.*
                run: composer update ${{ matrix.php == '8.4' && '--ignore-platform-req=php+' || '' }}

            -   name: Install lowest dependencies
                if: matrix.composer-mode == 'lowest'
                run: composer update --prefer-lowest

            -   name: Run tests (phpunit)
                run: ./vendor/bin/phpunit

            -   name: Run tests (Behat)
                run: ./bin/behat -fprogress --strict

            -   name: Run tests (Behat for PHP 8.0)
                if: matrix.php >= 8.0
                run: ./bin/behat -fprogress --strict --tags=@php8

    static-analysis:
        runs-on: ubuntu-latest
        name: Static analysis
        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.2
                  ini-values: "zend.exception_ignore_args=Off"
                  coverage: none

            - name: Install dependencies
              run: composer update

            - name: Run Psalm
              run: ./vendor/bin/psalm --output-format=github

    build-phar:
        needs: tests
        runs-on: ubuntu-latest
        name: Build PHAR file
        steps:
            - uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.3"
                  ini-values: "phar.readonly=0,zend.exception_ignore_args=Off"
                  coverage: none
                  tools: box

            - name: Build the PHAR
              run: |
                  composer config platform.php ^7.2.34 
                  composer update --no-dev -o
                  box build

            - name: Test the PHAR
              run: |
                  behat.phar --version

            - uses: actions/upload-artifact@v3
              name: Upload PHAR artifact
              with:
                  name: behat.phar
                  path: behat.phar


    publish-phar:
        runs-on: ubuntu-latest
        name: Publish the PHAR for release
        needs: build-phar
        if: github.event_name == 'release'
        steps:
            -   uses: actions/download-artifact@v4
                with:
                    name: behat.phar
                    path: .
            -   name: Upload behat.phar
                uses: basefas/upload-release-asset-action@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    release_id: ${{ github.event.release.id }}
                    asset_path: behat.phar
                    asset_name: behat.phar
